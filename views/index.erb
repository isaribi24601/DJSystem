<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="UTF-8">
    <title>Document</title>
    <script src="//code.jquery.com/jquery-1.11.2.min.js"></script>
    <script src="//code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
    
    <style type="text/css">
        
        body{background-color: black;
             color: white;
            
        }
      </style>
  </head>
  <body>

<center>
   


    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
    <div id="player"></div>

    <script>
// 2. This code loads the IFrame Player API code asynchronously.
var tag = document.createElement('script');
tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
// 3. This function creates an <iframe> (and YouTube player)
//    after the API code downloads.
var player;
function onYouTubeIframeAPIReady() {
  console.log("Hello!");
  var videoIdJSONStr;
  $.get("/api/dj", null, function(data) {
    // videoIdJSONStr = $.parseJSON(data);
    videoIdJSONStr = data;
    console.log(videoIdJSONStr)
      // videoIdJSON = $.parseJSON(videoIdJSONStr);
      // videoIdJSON = JSON.parse(videoIdJSONStr);
      // console.log(videoIdJSON)
      // console.log(videoId);
      player = new YT.Player('player', {
        height: '390',
        width: '640',
        videoId: videoIdJSONStr,
        events: {
          'onReady': onPlayerReady,
          'onStateChange': onPlayerStateChange
        }
      });
  });
//  console.log(videoIdJSONStr)
//  // videoIdJSON = $.parseJSON(videoIdJSONStr);
//  // videoIdJSON = JSON.parse(videoIdJSONStr);
//  // console.log(videoIdJSON)
//  // console.log(videoId);
//
//  player = new YT.Player('player', {
//    height: '390',
//    width: '640',
//    videoId: '',
//    events: {
//      'onReady': onPlayerReady,
//      'onStateChange': onPlayerStateChange
//    }
//  });
}
// 4. The API will call this function when the video player is ready.
function onPlayerReady(event) {
  event.target.playVideo();
}
// 5. The API calls this function when the player's state changes.
//    The function indicates that when playing a video (state=1),
//    the player should play for six seconds and then stop.
var done = false;

        function getPlayStatus() {
        }
        
    </script>
    
      </center>
  </body>
</html>